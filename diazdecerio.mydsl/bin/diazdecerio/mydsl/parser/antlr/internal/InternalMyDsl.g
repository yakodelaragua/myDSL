/*
 * generated by Xtext 2.25.0
 */
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package diazdecerio.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package diazdecerio.mydsl.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import diazdecerio.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

 	private MyDslGrammarAccess grammarAccess;

    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "JavaClass";
   	}

   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleJavaClass
entryRuleJavaClass returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getJavaClassRule()); }
	iv_ruleJavaClass=ruleJavaClass
	{ $current=$iv_ruleJavaClass.current; }
	EOF;

// Rule JavaClass
ruleJavaClass returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='package'
		{
			newLeafNode(otherlv_0, grammarAccess.getJavaClassAccess().getPackageKeyword_0());
		}
		(
			(
				lv_packageName_1_0=RULE_ID
				{
					newLeafNode(lv_packageName_1_0, grammarAccess.getJavaClassAccess().getPackageNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJavaClassRule());
					}
					setWithLastConsumed(
						$current,
						"packageName",
						lv_packageName_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='.dis2022;'
		{
			newLeafNode(otherlv_2, grammarAccess.getJavaClassAccess().getDis2022Keyword_2());
		}
		otherlv_3='public'
		{
			newLeafNode(otherlv_3, grammarAccess.getJavaClassAccess().getPublicKeyword_3());
		}
		otherlv_4='class'
		{
			newLeafNode(otherlv_4, grammarAccess.getJavaClassAccess().getClassKeyword_4());
		}
		(
			(
				lv_name_5_0=RULE_ID
				{
					newLeafNode(lv_name_5_0, grammarAccess.getJavaClassAccess().getNameIDTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getJavaClassRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_5_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_6='{'
		{
			newLeafNode(otherlv_6, grammarAccess.getJavaClassAccess().getLeftCurlyBracketKeyword_6());
		}
		otherlv_7='int'
		{
			newLeafNode(otherlv_7, grammarAccess.getJavaClassAccess().getIntKeyword_7());
		}
		otherlv_8='a'
		{
			newLeafNode(otherlv_8, grammarAccess.getJavaClassAccess().getAKeyword_8());
		}
		otherlv_9='='
		{
			newLeafNode(otherlv_9, grammarAccess.getJavaClassAccess().getEqualsSignKeyword_9());
		}
		otherlv_10='0'
		{
			newLeafNode(otherlv_10, grammarAccess.getJavaClassAccess().getDigitZeroKeyword_10());
		}
		otherlv_11=';'
		{
			newLeafNode(otherlv_11, grammarAccess.getJavaClassAccess().getSemicolonKeyword_11());
		}
		otherlv_12='int'
		{
			newLeafNode(otherlv_12, grammarAccess.getJavaClassAccess().getIntKeyword_12());
		}
		otherlv_13='b'
		{
			newLeafNode(otherlv_13, grammarAccess.getJavaClassAccess().getBKeyword_13());
		}
		otherlv_14='='
		{
			newLeafNode(otherlv_14, grammarAccess.getJavaClassAccess().getEqualsSignKeyword_14());
		}
		otherlv_15='0'
		{
			newLeafNode(otherlv_15, grammarAccess.getJavaClassAccess().getDigitZeroKeyword_15());
		}
		otherlv_16=';'
		{
			newLeafNode(otherlv_16, grammarAccess.getJavaClassAccess().getSemicolonKeyword_16());
		}
		(
			(
				{ 
				  getUnorderedGroupHelper().enter(grammarAccess.getJavaClassAccess().getUnorderedGroup_17());
				}
				(
					(
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getJavaClassAccess().getUnorderedGroup_17(), 0)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getJavaClassAccess().getUnorderedGroup_17(), 0);
					}
								({true}?=>((
									{
										newCompositeNode(grammarAccess.getJavaClassAccess().getConstructorConstructorParserRuleCall_17_0_0());
									}
									lv_constructor_18_0=ruleConstructor
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getJavaClassRule());
										}
										set(
											$current,
											"constructor",
											lv_constructor_18_0,
											"diazdecerio.mydsl.MyDsl.Constructor");
										afterParserOrEnumRuleCall();
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getJavaClassAccess().getUnorderedGroup_17());
					}
				)
			)|
			(
				{getUnorderedGroupHelper().canSelect(grammarAccess.getJavaClassAccess().getUnorderedGroup_17(), 1)}?=>(
					{
						getUnorderedGroupHelper().select(grammarAccess.getJavaClassAccess().getUnorderedGroup_17(), 1);
					}
								({true}?=>((
									{
										newCompositeNode(grammarAccess.getJavaClassAccess().getMainMainParserRuleCall_17_1_0());
									}
									lv_main_19_0=ruleMain
									{
										if ($current==null) {
											$current = createModelElementForParent(grammarAccess.getJavaClassRule());
										}
										set(
											$current,
											"main",
											lv_main_19_0,
											"diazdecerio.mydsl.MyDsl.Main");
										afterParserOrEnumRuleCall();
									}
								)
								))
					{ 
						getUnorderedGroupHelper().returnFromSelection(grammarAccess.getJavaClassAccess().getUnorderedGroup_17());
					}
				)
			)
					)+
					{getUnorderedGroupHelper().canLeave(grammarAccess.getJavaClassAccess().getUnorderedGroup_17())}?
				)
			)
				{ 
				  getUnorderedGroupHelper().leave(grammarAccess.getJavaClassAccess().getUnorderedGroup_17());
				}
		)
		otherlv_20='}'
		{
			newLeafNode(otherlv_20, grammarAccess.getJavaClassAccess().getRightCurlyBracketKeyword_18());
		}
	)
;

// Entry rule entryRuleMain
entryRuleMain returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMainRule()); }
	iv_ruleMain=ruleMain
	{ $current=$iv_ruleMain.current; }
	EOF;

// Rule Main
ruleMain returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='public'
		{
			newLeafNode(otherlv_0, grammarAccess.getMainAccess().getPublicKeyword_0());
		}
		otherlv_1='static'
		{
			newLeafNode(otherlv_1, grammarAccess.getMainAccess().getStaticKeyword_1());
		}
		otherlv_2='void'
		{
			newLeafNode(otherlv_2, grammarAccess.getMainAccess().getVoidKeyword_2());
		}
		otherlv_3='main'
		{
			newLeafNode(otherlv_3, grammarAccess.getMainAccess().getMainKeyword_3());
		}
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getMainAccess().getLeftParenthesisKeyword_4());
		}
		otherlv_5='String'
		{
			newLeafNode(otherlv_5, grammarAccess.getMainAccess().getStringKeyword_5());
		}
		otherlv_6='['
		{
			newLeafNode(otherlv_6, grammarAccess.getMainAccess().getLeftSquareBracketKeyword_6());
		}
		otherlv_7=']'
		{
			newLeafNode(otherlv_7, grammarAccess.getMainAccess().getRightSquareBracketKeyword_7());
		}
		otherlv_8='args'
		{
			newLeafNode(otherlv_8, grammarAccess.getMainAccess().getArgsKeyword_8());
		}
		otherlv_9=')'
		{
			newLeafNode(otherlv_9, grammarAccess.getMainAccess().getRightParenthesisKeyword_9());
		}
		otherlv_10='{'
		{
			newLeafNode(otherlv_10, grammarAccess.getMainAccess().getLeftCurlyBracketKeyword_10());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMainRule());
					}
				}
				otherlv_11=RULE_ID
				{
					newLeafNode(otherlv_11, grammarAccess.getMainAccess().getTheTypeJavaClassCrossReference_11_0());
				}
			)
		)
		otherlv_12='s'
		{
			newLeafNode(otherlv_12, grammarAccess.getMainAccess().getSKeyword_12());
		}
		otherlv_13='='
		{
			newLeafNode(otherlv_13, grammarAccess.getMainAccess().getEqualsSignKeyword_13());
		}
		otherlv_14='new'
		{
			newLeafNode(otherlv_14, grammarAccess.getMainAccess().getNewKeyword_14());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMainRule());
					}
				}
				otherlv_15=RULE_ID
				{
					newLeafNode(otherlv_15, grammarAccess.getMainAccess().getAgainJavaClassCrossReference_15_0());
				}
			)
		)
		otherlv_16='()'
		{
			newLeafNode(otherlv_16, grammarAccess.getMainAccess().getLeftParenthesisRightParenthesisKeyword_16());
		}
		otherlv_17=';'
		{
			newLeafNode(otherlv_17, grammarAccess.getMainAccess().getSemicolonKeyword_17());
		}
		otherlv_18='}'
		{
			newLeafNode(otherlv_18, grammarAccess.getMainAccess().getRightCurlyBracketKeyword_18());
		}
	)
;

// Entry rule entryRuleConstructor
entryRuleConstructor returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConstructorRule()); }
	iv_ruleConstructor=ruleConstructor
	{ $current=$iv_ruleConstructor.current; }
	EOF;

// Rule Constructor
ruleConstructor returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='public'
		{
			newLeafNode(otherlv_0, grammarAccess.getConstructorAccess().getPublicKeyword_0());
		}
		(
			(
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getConstructorRule());
					}
				}
				otherlv_1=RULE_ID
				{
					newLeafNode(otherlv_1, grammarAccess.getConstructorAccess().getConstructorJavaClassCrossReference_1_0());
				}
			)
		)
		otherlv_2='()'
		{
			newLeafNode(otherlv_2, grammarAccess.getConstructorAccess().getLeftParenthesisRightParenthesisKeyword_2());
		}
		otherlv_3='{'
		{
			newLeafNode(otherlv_3, grammarAccess.getConstructorAccess().getLeftCurlyBracketKeyword_3());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getConstructorAccess().getStmtsStmtParserRuleCall_4_0());
				}
				lv_stmts_4_0=ruleStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getConstructorRule());
					}
					add(
						$current,
						"stmts",
						lv_stmts_4_0,
						"diazdecerio.mydsl.MyDsl.Stmt");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getConstructorAccess().getRightCurlyBracketKeyword_5());
		}
	)
;

// Entry rule entryRuleStmt
entryRuleStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getStmtRule()); }
	iv_ruleStmt=ruleStmt
	{ $current=$iv_ruleStmt.current; }
	EOF;

// Rule Stmt
ruleStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getStmtAccess().getSumStmtParserRuleCall_0());
		}
		this_SumStmt_0=ruleSumStmt
		{
			$current = $this_SumStmt_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStmtAccess().getMulStmtParserRuleCall_1());
		}
		this_MulStmt_1=ruleMulStmt
		{
			$current = $this_MulStmt_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStmtAccess().getDivStmtParserRuleCall_2());
		}
		this_DivStmt_2=ruleDivStmt
		{
			$current = $this_DivStmt_2.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getStmtAccess().getWhileStmtParserRuleCall_3());
		}
		this_WhileStmt_3=ruleWhileStmt
		{
			$current = $this_WhileStmt_3.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleSumStmt
entryRuleSumStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getSumStmtRule()); }
	iv_ruleSumStmt=ruleSumStmt
	{ $current=$iv_ruleSumStmt.current; }
	EOF;

// Rule SumStmt
ruleSumStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getSumStmtAccess().getRegRegisterEnumRuleCall_0_0());
				}
				lv_reg_0_0=ruleRegister
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getSumStmtRule());
					}
					set(
						$current,
						"reg",
						lv_reg_0_0,
						"diazdecerio.mydsl.MyDsl.Register");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='+='
		{
			newLeafNode(otherlv_1, grammarAccess.getSumStmtAccess().getPlusSignEqualsSignKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_INT
				{
					newLeafNode(lv_value_2_0, grammarAccess.getSumStmtAccess().getValueINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getSumStmtRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getSumStmtAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleMulStmt
entryRuleMulStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getMulStmtRule()); }
	iv_ruleMulStmt=ruleMulStmt
	{ $current=$iv_ruleMulStmt.current; }
	EOF;

// Rule MulStmt
ruleMulStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getMulStmtAccess().getRegRegisterEnumRuleCall_0_0());
				}
				lv_reg_0_0=ruleRegister
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getMulStmtRule());
					}
					set(
						$current,
						"reg",
						lv_reg_0_0,
						"diazdecerio.mydsl.MyDsl.Register");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='*='
		{
			newLeafNode(otherlv_1, grammarAccess.getMulStmtAccess().getAsteriskEqualsSignKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_INT
				{
					newLeafNode(lv_value_2_0, grammarAccess.getMulStmtAccess().getValueINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getMulStmtRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getMulStmtAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleDivStmt
entryRuleDivStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getDivStmtRule()); }
	iv_ruleDivStmt=ruleDivStmt
	{ $current=$iv_ruleDivStmt.current; }
	EOF;

// Rule DivStmt
ruleDivStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				{
					newCompositeNode(grammarAccess.getDivStmtAccess().getRegRegisterEnumRuleCall_0_0());
				}
				lv_reg_0_0=ruleRegister
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getDivStmtRule());
					}
					set(
						$current,
						"reg",
						lv_reg_0_0,
						"diazdecerio.mydsl.MyDsl.Register");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_1='/='
		{
			newLeafNode(otherlv_1, grammarAccess.getDivStmtAccess().getSolidusEqualsSignKeyword_1());
		}
		(
			(
				lv_value_2_0=RULE_INT
				{
					newLeafNode(lv_value_2_0, grammarAccess.getDivStmtAccess().getValueINTTerminalRuleCall_2_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getDivStmtRule());
					}
					setWithLastConsumed(
						$current,
						"value",
						lv_value_2_0,
						"org.eclipse.xtext.common.Terminals.INT");
				}
			)
		)
		otherlv_3=';'
		{
			newLeafNode(otherlv_3, grammarAccess.getDivStmtAccess().getSemicolonKeyword_3());
		}
	)
;

// Entry rule entryRuleWhileStmt
entryRuleWhileStmt returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getWhileStmtRule()); }
	iv_ruleWhileStmt=ruleWhileStmt
	{ $current=$iv_ruleWhileStmt.current; }
	EOF;

// Rule WhileStmt
ruleWhileStmt returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		otherlv_0='while'
		{
			newLeafNode(otherlv_0, grammarAccess.getWhileStmtAccess().getWhileKeyword_0());
		}
		otherlv_1='('
		{
			newLeafNode(otherlv_1, grammarAccess.getWhileStmtAccess().getLeftParenthesisKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileStmtAccess().getCondConditionParserRuleCall_2_0());
				}
				lv_cond_2_0=ruleCondition
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileStmtRule());
					}
					set(
						$current,
						"cond",
						lv_cond_2_0,
						"diazdecerio.mydsl.MyDsl.Condition");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3=')'
		{
			newLeafNode(otherlv_3, grammarAccess.getWhileStmtAccess().getRightParenthesisKeyword_3());
		}
		otherlv_4='{'
		{
			newLeafNode(otherlv_4, grammarAccess.getWhileStmtAccess().getLeftCurlyBracketKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getWhileStmtAccess().getStmtsWhileStmtParserRuleCall_5_0());
				}
				lv_stmtsWhile_5_0=ruleStmt
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getWhileStmtRule());
					}
					add(
						$current,
						"stmtsWhile",
						lv_stmtsWhile_5_0,
						"diazdecerio.mydsl.MyDsl.Stmt");
					afterParserOrEnumRuleCall();
				}
			)
		)+
		otherlv_6='}'
		{
			newLeafNode(otherlv_6, grammarAccess.getWhileStmtAccess().getRightCurlyBracketKeyword_6());
		}
	)
;

// Entry rule entryRuleCondition
entryRuleCondition returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getConditionRule()); }
	iv_ruleCondition=ruleCondition
	{ $current=$iv_ruleCondition.current; }
	EOF;

// Rule Condition
ruleCondition returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionAccess().getRegRegisterEnumRuleCall_0_0_0());
					}
					lv_reg_0_0=ruleRegister
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionRule());
						}
						set(
							$current,
							"reg",
							lv_reg_0_0,
							"diazdecerio.mydsl.MyDsl.Register");
						afterParserOrEnumRuleCall();
					}
				)
			)
			otherlv_1='!='
			{
				newLeafNode(otherlv_1, grammarAccess.getConditionAccess().getExclamationMarkEqualsSignKeyword_0_1());
			}
			(
				(
					lv_number_2_0=RULE_INT
					{
						newLeafNode(lv_number_2_0, grammarAccess.getConditionAccess().getNumberINTTerminalRuleCall_0_2_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConditionRule());
						}
						setWithLastConsumed(
							$current,
							"number",
							lv_number_2_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
		)
		    |
		(
			(
				(
					lv_number_3_0=RULE_INT
					{
						newLeafNode(lv_number_3_0, grammarAccess.getConditionAccess().getNumberINTTerminalRuleCall_1_0_0());
					}
					{
						if ($current==null) {
							$current = createModelElement(grammarAccess.getConditionRule());
						}
						setWithLastConsumed(
							$current,
							"number",
							lv_number_3_0,
							"org.eclipse.xtext.common.Terminals.INT");
					}
				)
			)
			otherlv_4='!='
			{
				newLeafNode(otherlv_4, grammarAccess.getConditionAccess().getExclamationMarkEqualsSignKeyword_1_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getConditionAccess().getRegRegisterEnumRuleCall_1_2_0());
					}
					lv_reg_5_0=ruleRegister
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getConditionRule());
						}
						set(
							$current,
							"reg",
							lv_reg_5_0,
							"diazdecerio.mydsl.MyDsl.Register");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)
	)
;

// Rule Register
ruleRegister returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='a'
			{
				$current = grammarAccess.getRegisterAccess().getRegisterAEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getRegisterAccess().getRegisterAEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='b'
			{
				$current = grammarAccess.getRegisterAccess().getRegisterBEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getRegisterAccess().getRegisterBEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
