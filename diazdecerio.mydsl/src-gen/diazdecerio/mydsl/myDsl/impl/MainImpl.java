/**
 * generated by Xtext 2.25.0
 */
package diazdecerio.mydsl.myDsl.impl;

import diazdecerio.mydsl.myDsl.JavaClass;
import diazdecerio.mydsl.myDsl.Main;
import diazdecerio.mydsl.myDsl.MyDslPackage;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Main</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link diazdecerio.mydsl.myDsl.impl.MainImpl#getTheType <em>The Type</em>}</li>
 *   <li>{@link diazdecerio.mydsl.myDsl.impl.MainImpl#getAgain <em>Again</em>}</li>
 * </ul>
 *
 * @generated
 */
public class MainImpl extends MinimalEObjectImpl.Container implements Main
{
  /**
   * The cached value of the '{@link #getTheType() <em>The Type</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTheType()
   * @generated
   * @ordered
   */
  protected JavaClass theType;

  /**
   * The cached value of the '{@link #getAgain() <em>Again</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAgain()
   * @generated
   * @ordered
   */
  protected JavaClass again;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected MainImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return MyDslPackage.Literals.MAIN;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public JavaClass getTheType()
  {
    if (theType != null && theType.eIsProxy())
    {
      InternalEObject oldTheType = (InternalEObject)theType;
      theType = (JavaClass)eResolveProxy(oldTheType);
      if (theType != oldTheType)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, MyDslPackage.MAIN__THE_TYPE, oldTheType, theType));
      }
    }
    return theType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public JavaClass basicGetTheType()
  {
    return theType;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTheType(JavaClass newTheType)
  {
    JavaClass oldTheType = theType;
    theType = newTheType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.MAIN__THE_TYPE, oldTheType, theType));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public JavaClass getAgain()
  {
    if (again != null && again.eIsProxy())
    {
      InternalEObject oldAgain = (InternalEObject)again;
      again = (JavaClass)eResolveProxy(oldAgain);
      if (again != oldAgain)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, MyDslPackage.MAIN__AGAIN, oldAgain, again));
      }
    }
    return again;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public JavaClass basicGetAgain()
  {
    return again;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAgain(JavaClass newAgain)
  {
    JavaClass oldAgain = again;
    again = newAgain;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, MyDslPackage.MAIN__AGAIN, oldAgain, again));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case MyDslPackage.MAIN__THE_TYPE:
        if (resolve) return getTheType();
        return basicGetTheType();
      case MyDslPackage.MAIN__AGAIN:
        if (resolve) return getAgain();
        return basicGetAgain();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case MyDslPackage.MAIN__THE_TYPE:
        setTheType((JavaClass)newValue);
        return;
      case MyDslPackage.MAIN__AGAIN:
        setAgain((JavaClass)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.MAIN__THE_TYPE:
        setTheType((JavaClass)null);
        return;
      case MyDslPackage.MAIN__AGAIN:
        setAgain((JavaClass)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case MyDslPackage.MAIN__THE_TYPE:
        return theType != null;
      case MyDslPackage.MAIN__AGAIN:
        return again != null;
    }
    return super.eIsSet(featureID);
  }

} //MainImpl
